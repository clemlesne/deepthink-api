[project]
description = "DeepThink exposed as a standard LLM API with thinking. Swappable model backend."
dynamic = ["version"]
license = { file = "LICENSE" }
name = "deepthink-api"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
  "aiojobs~=1.3",
  "crawl4ai~=0.5",
  "diskcache~=5.6",
  "fastapi~=0.115",
  "gunicorn~=23.0",
  "litellm~=1.63",
  "numpydoc~=1.8",
  "pydantic~=2.8",
  "python-dotenv~=1.0",
  "sse-starlette~=2.2",
  "structlog~=25.2",
  "uvicorn[standard]~=0.32",
]

[project.optional-dependencies]
dev = [
  "deptry~=0.19",
  "openai~=1.65",
  "pyright~=1.1",
  "pytest-asyncio~=0.24",
  "pytest-xdist[psutil]~=3.6",
  "pytest~=8.3",
  "ruff~=0.6",
]

[tool.setuptools]
py-modules = ["app"]

[tool.deptry]
pep621_dev_dependency_groups = ["dev"]

[tool.deptry.per_rule_ignores]
DEP001 = ["app"]
DEP002 = ["gunicorn", "uvicorn", "numpydoc", "diskcache"]

[tool.ruff]
target-version = "py313"

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.ruff.format]
docstring-code-format = true

[tool.pyright]
pythonVersion = "3.13"
include = ["app", "tests"]

[tool.ruff.lint]
ignore = ["A005"]
select = ["A", "ARG", "ASYNC", "DTZ", "I", "PERF", "PL", "RUF", "T20", "UP"]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
asyncio_mode = "auto"
junit_suite_name = "deepthink-api"
log_file_level = "INFO"
pythonpath = ["app"]
testpaths = ["tests"]
